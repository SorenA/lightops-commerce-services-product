syntax = "proto3";

package lightops.service;

option csharp_namespace = "LightOps.Commerce.Proto.Services.Product";

import "google/protobuf/wrappers.proto";
import "Protos/type/product.proto";

service ProductService {
  // Persists a product
  rpc Persist(PersistRequest) returns (PersistResponse) {}

  // Deletes a product
  rpc Delete(DeleteRequest) returns (DeleteResponse) {}

  // Gets a list of products by handle
  rpc GetByHandles(GetByHandlesRequest) returns (GetByHandlesResponse) {}

  // Gets a list of products by ids
  rpc GetByIds(GetByIdsRequest) returns (GetByIdsResponse) {}

  // Gets a list of paginated products by search
  rpc GetBySearch(GetBySearchRequest) returns (GetBySearchResponse) {}
}

/*
 * Persist messages
 */
 message PersistRequest {
  // The id of the product to persist
  string id = 1;

  // The product to persist
  lightops.type.Product product = 2;
}

message PersistResponse {
  // The status code of the operation
  StatusCode status_code = 1;

  // The errors occoured, if any
  repeated string errors = 2;

  enum StatusCode {
    UNKNOWN = 0;
    OK = 1;
    UNAVAILABLE = 2;
    INVALID = 3;
  }
}

/*
 * Delete messages
 */
message DeleteRequest {
  // The id of the product to delete
  string id = 1;
}

message DeleteResponse {
  // The status code of the operation
  StatusCode status_code = 1;

  enum StatusCode {
    UNKNOWN = 0;
    OK = 1;
    UNAVAILABLE = 2;
  }
}

/*
 * GetByHandles messages
 */
message GetByHandlesRequest {
  // The handles of the product requested
  repeated string handles = 1;
}

message GetByHandlesResponse {
  // The products found, if any
  repeated lightops.type.Product products = 1;
}

/*
 * GetByIds messages
 */
message GetByIdsRequest {
  // The ids of the products requested
  repeated string ids = 1;
}

message GetByIdsResponse {
  // The products found, if any
  repeated lightops.type.Product products = 1;
}

/*
 * GetBySearch messages
 */
message GetBySearchRequest {
  // The term to search for, if any
  google.protobuf.StringValue search_term = 1;

  // Search only in localized strings with a specific language code, if any specified.
  // ISO 639 2-letter language code matched with ISO 3166 2-letter country code, eg. en-US, da-DK
  google.protobuf.StringValue language_code = 2;

  // Search only in children with a specific category id, if any specified
  google.protobuf.StringValue category_id = 3;

  // The page cursor to use
  google.protobuf.StringValue page_cursor = 4;

  // The page size to use
  google.protobuf.Int32Value page_size = 5;

  // Sort the underlying list by the given key
  lightops.type.ProductSortKey sort_key = 6;

  // Whether to reverse the order of the underlying list
  google.protobuf.BoolValue reverse = 7;

  // The currency code to use for sorting if sorting by currency
  // ISO 4217 3-letter currency code
  google.protobuf.StringValue currency_code = 8;
}

message GetBySearchResponse {
  // The products found, if any
  repeated Result results = 1;

  // The total amount of results available
  int32 total_results = 2;

  // Whether another page can be fetched
  bool has_next_page = 3;

  // Whether a previous page can be fetched
  bool has_previous_page = 4;

  // The cursor of the first result
  string start_cursor = 5;

  // The cursor of the last result
  string end_cursor = 6;

  message Result {
    // The cursor of the result
    string cursor = 1;

    // The result node
    lightops.type.Product node = 2;
  }
}
